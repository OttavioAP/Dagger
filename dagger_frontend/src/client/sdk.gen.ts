// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { UpdateUserUserPostData, UpdateUserUserPostResponse, UpdateUserUserPostError, GetUserByUsernameUserGetUserByUsernamePostData, GetUserByUsernameUserGetUserByUsernamePostResponse, GetUserByUsernameUserGetUserByUsernamePostError, GetUsersByTeamUserByTeamGetData, GetUsersByTeamUserByTeamGetResponse, GetUsersByTeamUserByTeamGetError, GetAllTasksTasksGetData, GetAllTasksTasksGetResponse, TaskPostTasksPostData, TaskPostTasksPostResponse, TaskPostTasksPostError, GetAllTeamsTeamsGetData, GetAllTeamsTeamsGetResponse, CreateTeamTeamsPostData, CreateTeamTeamsPostResponse, CreateTeamTeamsPostError, DeleteTeamTeamsTeamIdDeleteData, DeleteTeamTeamsTeamIdDeleteResponse, DeleteTeamTeamsTeamIdDeleteError, GetAllDagsDagGetData, GetAllDagsDagGetResponse, DagActionDagPostData, DagActionDagPostResponse, DagActionDagPostError, GetAllUserTasksUserTasksGetData, GetAllUserTasksUserTasksGetResponse, ModifyUserTaskUserTasksPostData, ModifyUserTaskUserTasksPostResponse, ModifyUserTaskUserTasksPostError, GetWeeksWeekGetData, GetWeeksWeekGetResponse, GetWeeksWeekGetError, AgenticSearchAgenticSearchGetData, AgenticSearchAgenticSearchGetResponse, AgenticSearchAgenticSearchGetError, HealthCheckHealthGetData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Update User
 */
export const updateUserUserPost = <ThrowOnError extends boolean = false>(options: Options<UpdateUserUserPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UpdateUserUserPostResponse, UpdateUserUserPostError, ThrowOnError>({
        url: '/user/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get User By Username
 */
export const getUserByUsernameUserGetUserByUsernamePost = <ThrowOnError extends boolean = false>(options: Options<GetUserByUsernameUserGetUserByUsernamePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetUserByUsernameUserGetUserByUsernamePostResponse, GetUserByUsernameUserGetUserByUsernamePostError, ThrowOnError>({
        url: '/user/get_user_by_username',
        ...options
    });
};

/**
 * Get Users By Team
 */
export const getUsersByTeamUserByTeamGet = <ThrowOnError extends boolean = false>(options: Options<GetUsersByTeamUserByTeamGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUsersByTeamUserByTeamGetResponse, GetUsersByTeamUserByTeamGetError, ThrowOnError>({
        url: '/user/by_team',
        ...options
    });
};

/**
 * Get All Tasks
 */
export const getAllTasksTasksGet = <ThrowOnError extends boolean = false>(options?: Options<GetAllTasksTasksGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllTasksTasksGetResponse, unknown, ThrowOnError>({
        url: '/tasks/',
        ...options
    });
};

/**
 * Task Post
 */
export const taskPostTasksPost = <ThrowOnError extends boolean = false>(options: Options<TaskPostTasksPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TaskPostTasksPostResponse, TaskPostTasksPostError, ThrowOnError>({
        url: '/tasks/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get All Teams
 */
export const getAllTeamsTeamsGet = <ThrowOnError extends boolean = false>(options?: Options<GetAllTeamsTeamsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllTeamsTeamsGetResponse, unknown, ThrowOnError>({
        url: '/teams/',
        ...options
    });
};

/**
 * Create Team
 */
export const createTeamTeamsPost = <ThrowOnError extends boolean = false>(options: Options<CreateTeamTeamsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateTeamTeamsPostResponse, CreateTeamTeamsPostError, ThrowOnError>({
        url: '/teams/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete Team
 */
export const deleteTeamTeamsTeamIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteTeamTeamsTeamIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteTeamTeamsTeamIdDeleteResponse, DeleteTeamTeamsTeamIdDeleteError, ThrowOnError>({
        url: '/teams/{team_id}',
        ...options
    });
};

/**
 * Get All Dags
 */
export const getAllDagsDagGet = <ThrowOnError extends boolean = false>(options?: Options<GetAllDagsDagGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllDagsDagGetResponse, unknown, ThrowOnError>({
        url: '/dag/',
        ...options
    });
};

/**
 * Dag Action
 */
export const dagActionDagPost = <ThrowOnError extends boolean = false>(options: Options<DagActionDagPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DagActionDagPostResponse, DagActionDagPostError, ThrowOnError>({
        url: '/dag/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get All User Tasks
 */
export const getAllUserTasksUserTasksGet = <ThrowOnError extends boolean = false>(options?: Options<GetAllUserTasksUserTasksGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllUserTasksUserTasksGetResponse, unknown, ThrowOnError>({
        url: '/user_tasks/',
        ...options
    });
};

/**
 * Modify User Task
 */
export const modifyUserTaskUserTasksPost = <ThrowOnError extends boolean = false>(options: Options<ModifyUserTaskUserTasksPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ModifyUserTaskUserTasksPostResponse, ModifyUserTaskUserTasksPostError, ThrowOnError>({
        url: '/user_tasks/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Weeks
 */
export const getWeeksWeekGet = <ThrowOnError extends boolean = false>(options?: Options<GetWeeksWeekGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetWeeksWeekGetResponse, GetWeeksWeekGetError, ThrowOnError>({
        url: '/week/',
        ...options
    });
};

/**
 * Agentic Search
 */
export const agenticSearchAgenticSearchGet = <ThrowOnError extends boolean = false>(options: Options<AgenticSearchAgenticSearchGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AgenticSearchAgenticSearchGetResponse, AgenticSearchAgenticSearchGetError, ThrowOnError>({
        url: '/agentic/search',
        ...options
    });
};

/**
 * Health Check
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/health',
        ...options
    });
};